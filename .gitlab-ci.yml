# This CI/CD pipeline consists of two different stages: build, test.
# The pipeline uses echo commands to simulate the pipeline execution.
image: node:latest

stages: # List of stages for jobs, and their order of execution
  - build
  - test

## TODO:
## 1. Cache node modules with docker file, to increase performance.

build-job: # This job runs in the build stage, which runs first.
  stage: build
  before_script:
    - npm i
  script:
    - echo "Compiling the code..."
    - npm build
    - echo "Compile complete."
  tags:
    - hva

lint-test-job:
  stage: test # It can run at the same time as unit-test-job (in parallel).
  before_script:
    - npm i
  script:
    - echo "Linting code... This will take about 10 seconds."
    - npm run lint
    - echo "Lint check is completed."
  tags:
    - hva

sonarqube-check:
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar" # Defines the location of the analysis task cache
    GIT_DEPTH: "0" # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  allow_failure: true
  rules:
    - if: $CI_COMMIT_BRANCH == 'main'
    - if: $CI_COMMIT_BRANCH == 'acceptance'
  tags:
    - hva
