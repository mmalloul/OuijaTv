# This CI/CD pipeline consists of two different stages: build, test.
# The pipeline uses echo commands to simulate the pipeline execution.

stages: # List of stages for jobs, and their order of execution
  - build
  - test

# Cache modules in between jobs
before_script:
  - npm install

build-job: # This job runs in the build stage, which runs first.
  stage: build
  script:
    - echo "Compiling the code..."
    - npm build
    - echo "Compile complete."

lint-test-job:
  stage: test    # It can run at the same time as unit-test-job (in parallel).
  script:
      - echo "Linting code... This will take about 10 seconds."
      - npm run lint
      - echo "Lint check is completed."

sonarqube-check:
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  allow_failure: true
  rules:
    - if: $CI_COMMIT_BRANCH == 'Features/OUIJ-19-CI/CD-pipeline'
  tags:
    - hva

#unit-test-job:   # This job runs in the test stage.
#  stage: test    # It only starts when the job in the build stage completes successfully.
#  script:
#    - echo "Running unit tests..."
#    - npm run test:unit
#    - echo "All tests have run"

